version: '3.8'

services:
  model_registry:
    build: .
    command: python model_registry.py
    depends_on:
      - rabbitmq
      - prometheus
    ports:
      - "9000:9000"
    networks:
      - backend

  gateway:
    build: .
    command: python api_service.py
    depends_on:
      - model_registry
      - rabbitmq
      - redis
    ports:
      - "8002:8002"
    networks:
      - backend

  model_a:
    build: .
    command: python -m models.model_a
    depends_on:
      - model_registry
      - redis
      - rabbitmq
    ports:
      - "8000:8000"
    networks:
      - backend

  model_b:
    build: .
    command: python -m models.model_b
    depends_on:
      - model_registry
      - redis
      - rabbitmq
    ports:
      - "8001:8001"
    networks:
      - backend

  model_example:
    build: .
    command: python -m models.example_model.implemented_interface
    depends_on:
      - model_registry
      - redis
      - rabbitmq
    ports:
      - "8003:8003"
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - backend

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend

  grafana:
    image: grafana/grafana
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/dashboards:/var/lib/grafana/dashboards
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - backend

networks:
  backend: